<templateSet group="JavaScript">
  <template name="il" value="import {$END$} from 'lodash';" description="import lodash" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cp" value="const {&#10;    $END$&#10;} = this.props;" description="destructing props" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="li" value="import {} from './$END$';" description="local import" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="pn" value="let prev = null;&#10;const next  = $END$;&#10;console.log(prev, next, prev === next);&#10;prev = next;" description="prev-next debugging" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ref" value="///&lt;reference path=&quot;$PATH$&quot;/&gt;&#10;$END$" description="Inserts reference path comment" toReformat="true" toShortenFQNames="false" deactivated="true">
    <variable name="PATH" expression="complete()" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="defn" value="define([&quot;$MODULE_REF$&quot;], function($MODULE_VAR$) {&#10;$END$&#10;});" description="Inserts define() expression" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="MODULE_REF" expression="complete()" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="MODULE_VAR" expression="jsDefineParameter(MODULE_REF)" defaultValue="mod" alwaysStopAt="true" />
    <context />
  </template>
  <template name="cl" value="console.log($END$)" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="conn" value="import {connect} from 'utils/store';&#10;import type {Connector} from 'utils/store';&#10;&#10;type DispatchedProps = {|    &#10;|};&#10;&#10;type StateProps = {|&#10;|};&#10;&#10;type AllProps = {|&#10;    ...DispatchedProps,&#10;    ...StateProps&#10;|};&#10;&#10;const connector: Connector&lt;AllProps, StateProps, DispatchedProps&gt; = connect(&#10;    state =&gt; ({&#10;    }),&#10;    dispatch =&gt; ({&#10;    })&#10;);&#10;&#10;export const Result = connector(Dumb);" description="Inserts typed connect" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ex" value="export {} from './$END$';" description="reexport" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ir" value="import * as React from 'react';" description="import react" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>